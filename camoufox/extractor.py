import time
import pprint
import camoufox
from playwright.sync_api import BrowserContext


def run():
    """
    Launches a browser using Camoufox to automatically solve the Datadome challenge,
    captures headers, and exports them to a Python file (base_headers.py).
    """
    context: BrowserContext | None = None
    try:
        # --- Launch browser with Camoufox ---
        # Camoufox automates browser fingerprinting and challenge solving.
        print("üöÄ Launching browser with Camoufox...")
        context = camoufox.sync_launch(
            headless=False,  # Set to True for server/CI environments
        )

        page = context.new_page()

        print("Navigating to https://www.idealista.com/...")
        # Camoufox will handle the Datadome challenge in the background.
        page.goto(
            "https://www.idealista.com/alquiler-viviendas/madrid-madrid/",
            timeout=120000,  # A generous timeout to allow the solver to work
            wait_until="networkidle",
        )

        print("\n‚úÖ Successfully navigated past the Datadome challenge!")

        # --- Capture Headers ---
        print("\nCapturing headers from a new request...")
        captured_headers = {}

        def capture_request_headers(request):
            """Captures headers from the main document request."""
            if request.is_navigation_request() and request.resource_type == "document":
                captured_headers.update(request.headers)

        page.on("request", capture_request_headers)

        # Reload the page to trigger a new navigation and capture its headers
        page.reload()
        page.wait_for_load_state("domcontentloaded")
        page.remove_listener("request", capture_request_headers)

        if not captured_headers:
            raise RuntimeError("Failed to capture headers on the reload request.")

        # --- Enhance Headers with Cookies ---
        all_cookies = context.cookies()
        captured_headers["cookie"] = "; ".join(
            [f"{cookie['name']}={cookie['value']}" for cookie in all_cookies]
        )

        # Clean up headers that are managed by HTTP clients
        for header in ["host", "connection", "content-length"]:
            captured_headers.pop(header, None)

        print("‚úÖ Headers captured successfully.")

        # --- Export headers to a Python file ---
        with open("base_headers.py", "w", encoding="utf-8") as f:
            f.write("# Auto-generated browser headers using Camoufox.\n\n")
            f.write("BASE_HEADERS = \\\n")
            # Use pprint for a clean, multi-line dictionary format
            f.write(pprint.pformat(captured_headers))
            f.write(
                "\n\n# Note: This file is automatically generated and will be overwritten.\n"
            )

        print("‚úÖ Headers saved to base_headers.py.")

    except Exception as e:
        print(f"\n‚ùå An error occurred: {e}")
        print("Please ensure you have run 'playwright install' in your terminal.")

    finally:
        if context:
            print("\nClosing the browser...")
            context.close()
            print("‚úÖ Browser closed.")


if __name__ == "__main__":
    run()
